.. _design_pattern:

**************************
용어
**************************

.. _design_terms_디자인_패턴:

=============
 디자인 패턴
=============

디자인 패턴이란 개발 시 자주 사용하는 설계 노하우나 코딩 테크닉을 뜻한다.

=====
 UML
=====


클래스와 클래스간의 관계를 설계하는 언어이다. 화살표의 방향은 한쪽 클래스를 인식하는 방향으로 그어진다.

- \+ : public
- \- : private
- \# : protected
- 상속. 한 클래스가 다른 클래스의 기능을 재사용할 수 있는 것을 뜻한다. (머리가 칠해진 화살표)
- 의존. 한 클래스가 다른 클래스의 참조를 갖지만 유지하지 않는 것을 의존관계라 한다. (점선 화살표)
- 일반 연관. 한 클래스가 다른 클래스의 참조를 유지하는 것을 뜻한다. (일반 화살표)
- aggregation. 배열 리스트나 연결 리스트처럼 생성 이후에도 데이터가 쌓일 수 있는 관계를 뜻한다. (화살표와 흰색 마름모) (집합 연관) (A has B)
- composition. aggregation보다 강한 결합성을 가지며 객체의 라이프 사이클까지 동일함을 뜻한다. (화살표와 검은 마름모) (복합 연관) (A owns B)

